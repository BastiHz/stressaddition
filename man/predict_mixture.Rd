% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_mixture.R
\name{predict_mixture}
\alias{predict_mixture}
\title{Predict the effect of a mixture of two toxicants}
\usage{
predict_mixture(
  model_a,
  model_b,
  concentration_a,
  concentration_b,
  proportion_ca = 0.5,
  effect_max = 100
)
}
\arguments{
\item{model_a, model_b}{The ecxsys models of the toxicants.}

\item{concentration_a, concentration_b}{The concentrations of the toxicants in
the mixture. Both vectors must either be the same length or the longer
length must be a multiple of the shorter length. That's because the shorter
concentration vector gets recycled to the length of the longer one.}

\item{proportion_ca}{The proportion of concentration addition in the
calculation of the toxicant stress of the mixture. Must be between 0 and 1.}

\item{effect_max}{Controls the scaling of the result. This represents the
maximum value the effect could possibly reach. For survival data in percent
this should be 100 (the default).}
}
\value{
A data frame with columns of the supplied concentrations and the
  corresponding mixture effects.
}
\description{
Given the ecxsys models of two toxicants this method predicts the effects of
different mixtures of both.
}
\details{
The predictions are symmetric, i.e. it does not matter which of the toxicant
models is 1 or 2 as long as the concentration arguments are supplied in the
right order. See the example below.

This method is only suitable for experiments without environmental stress.
Any environmental stress in \code{model_a} or \code{model_b} is ignored.
}
\examples{
toxicant_a  <- ecxsys(
    concentration = c(0, 0.05, 0.5, 5, 30),
    hormesis_concentration = 0.5,
    effect_tox_observed = c(90, 81, 92, 28, 0),
)
toxicant_b  <- ecxsys(
    concentration = c(0, 0.1, 1, 10, 100, 1000),
    hormesis_concentration = 10,
    effect_tox_observed = c(26, 25, 24, 27, 5, 0),
    effect_max = 30
)
predict_mixture(
    toxicant_a ,
    toxicant_b ,
    c(0, 0.02, 0.2, 2, 20),
    c(0, 0.03, 0.4, 5, 10)
)

# Example of symmetric prediction:
conc_a <- c(0, 0.03, 0.3, 3)
conc_b <- 5.5
prop_ca <- 0.75
mix_a <- predict_mixture(toxicant_a , toxicant_b , conc_a, conc_b, prop_ca)
mix_b <- predict_mixture(toxicant_b , toxicant_a , conc_b, conc_a, prop_ca)
identical(mix_a$effect, mix_b$effect)

}
